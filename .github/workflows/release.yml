name: Release Nuget Package

on:
  push:
    branches: [ main ]

jobs:
  create-tag:
    name: Create version tag
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag_version.outputs.new_tag }}
      new_version: ${{ steps.tag_version.outputs.new_version }}

    steps:
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: create-tag
    env:
      VERSION: ${{ needs.create-tag.outputs.new_version }}
    
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-dotnet@v1
      with:
          source-url: https://api.nuget.org/v3/index.json
      env:
          NUGET_AUTH_TOKEN: ${{secrets.NUGET_AUTH_TOKEN}}

    - name: 'Print version'
      run: |
        echo 'Creating package version ${{ needs.create-tag.outputs.new_version }}'

    - name: Test
      run: dotnet test
      working-directory: ./src/DepTree.Tests

    - name: Build project
      run: dotnet build -c Release

    - name: Generate a NuGet package
      run: dotnet pack --no-build -c Release -o . /p:PackageVersion=${{ needs.create-tag.outputs.new_version }}
      working-directory: ./src/DepTree

    - name: Push to GitHub package registry
      run: dotnet nuget push *.nupkg --api-key ${{secrets.NUGET_AUTH_TOKEN}}
      working-directory: ./src/DepTree

    - name: Generate a NuGet package
      run: dotnet pack --no-build -c Release -o . /p:PackageVersion=${{ needs.create-tag.outputs.new_version }}
      working-directory: ./src/DepTree.Diagrams

    - name: Push to GitHub package registry
      run: dotnet nuget push *.nupkg --api-key ${{secrets.NUGET_AUTH_TOKEN}}
      working-directory: ./src/DepTree.Diagrams

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [create-tag, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.create-tag.outputs.new_tag }}
          release_name: Release ${{ needs.create-tag.outputs.new_tag }}
          body: |
            New version
          draft: false 
          prerelease: false
